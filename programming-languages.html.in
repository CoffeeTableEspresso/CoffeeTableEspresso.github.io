<html lang="en">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta name="description" content="my website">
    <base href="/">
    <title>CoffeeTableEspresso &mdash; home</title>
    <link rel="stylesheet" href="assets/css/style.css">
</head>
<body>
#include "header.shtml"
    <div>
        <ul>
            <li> <b>C</b> &mdash; One of my favourite languages. Portable and low-level. </li>
            <li>
                <b>C++</b> &mdash; Not very well designed but gets the job done when you need need some abstraction on top of C.
            </li>
            <li> <b>Python</b> &mdash; Good general purpose language for scripts and prototypes. </li>
            <li> <b>Julia</b> &mdash; For anything numeric. </li>
            <li>
                <b>Bash</b> &mdash; For portable shell scripting. (On most platforms at least. <b>Cough-Cough</b> <sub>Windows can go fuck itself</sub> <b>Cough-Cough</b>)
            </li>
            <li> <b>Java</b> &mdash; Like C++ but with all the useful parts chopped off. </li>
            <li> <b>JavaScript</b> &mdash; Two words: Stockholm Syndrome. </li>
            <li> <b>TypeScript</b> &mdash; Doesn't really fix JavaScript, but at least it helps me avoid type errors.</li>
            <li> <b>Lisp</b> &mdash; You forget about the parentheses surprisingly quickly. </li>
            <li>
                <b>OCaml</b> &mdash; My favourite functional language. I'd love a chance to use this on a larger project sometime.
            </li>
            <li> <b>Ruby</b> &mdash; Nothing against Ruby, I just don't see a compelling reason to every use it over Python.</li>
            <li> <b>MATLAB</b> &mdash; Please use Julia instead, thanks. Or even Python. </li>
            <li> <b>R</b> &mdash; See my thoughts on MATLAB.</li>
            <li> <b>Go</b> &mdash; The concurrency is just about the only decent part of the language. </li>
        </ul>
    </div>
#include "footer.shtml"
</body>
</html>
